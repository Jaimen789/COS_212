//single array cycle detection method

// single visited array code:
class Solution {
  public:
    bool dfs(int s, vector<int> &visited, vector<int> adj[]) {
        visited[s] += 1;
        visited[s] += 1;    
        
        for(int ele: adj[s]) {
            if(visited[ele] == 0) {
                if(dfs(ele, visited, adj) == true) return true;
            }
            else if(visited[ele] == 2) {
                return true;
            }
        }
        
        visited[s] -= 1;;
        return false;
    }
    
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        vector<int> visited(V, 0);
        
        for(int i=0;i<V;i++) {
            if(visited[i] == 0) {
                if(dfs(i, visited, adj) == true) return true;
            }
        }
        return false;
    }
}